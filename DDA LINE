
#include <windows.h>  // For MS Windows
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>  // GLUT, includes glu.h and gl.h
#include <iostream>
#include <cstdlib>
#include<math.h>
#include<dos.h>
using namespace std;

void line(float x1, float y1, float x2, float y2) {
	glClear(GL_COLOR_BUFFER_BIT);
	
	glBegin(GL_POINTS);
	float m, dy, dx, d0, x, y;
	
	m = (y2 - y1) / (x2 - x1);
	

	if(fabs(m) <=1){
		dx = 1;
		dy = m;
	}
	else{
		dx = 1 / m;
		dy = 1;
	}
	
	x = x1;
	y = y1;
	cout<<"\nm = "<<m<<"\ndx = "<<dx<<"\ndy = "<<dy;
	cout<<"\n\nPoints Plotted : ";
	while(x <= x2){
			glColor3f(1.0, 1.0, 1.0);
			cout<<"\n"<<x<<" "<<y;
			glVertex2f(x, y);
			
			x = x + dx;
			y = y + dy;
	}
	cout<<"\n";
	glEnd();
	

	glFlush();
}
void display(void) {
	float x1, y1, x2, y2;
	cout<<"\nEnter point (x1, y1) :\n";
	cin>>x1>>y1;
	cout<<"Enter point (x2, y2) :\n";
	cin>>x2>>y2;
	line(x1, y1, x2, y2);
}

void myinit() {
	glClearColor(0.0, 0.0, 0.0, 1.0);
	glColor3f(1.0, 0.0, 0.0);
	glPointSize(3.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 499.0, 0.0, 499.0);
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("ASTHA");
	glutDisplayFunc(display);

	myinit();
	glutMainLoop();
	return 0;
}
